-- Code generated by protokitgo. DO NOT EDIT.
-- Note:
--      - Lua代码根据package做了自动聚合
--      - 2.5之前版本Lua package自动变成了全局变量,存在全局变量名称污染的风险,收敛后如希望兼容，请调用gen:declarePackageAsGlobal()
--      - 目前方法签名存在不规范问题，请注意大小写，后续版本会兼容性调整到统一规范

gen = gen or {}
local packageGlobalPrefix = ""
local CURRENT_MODULE_NAME = ...
GEN_PACKAGE_NAME = string.sub(CURRENT_MODULE_NAME, 1, -6)
local pb = require "pb"
local schemaHex = require(GEN_PACKAGE_NAME .. ".schema_hex")
assert(pb.load(pb.fromhex(schemaHex)))

require(GEN_PACKAGE_NAME .. ".framework.init")
require(GEN_PACKAGE_NAME .. ".init_common_command")
require(GEN_PACKAGE_NAME .. ".init_netutils")
require(GEN_PACKAGE_NAME .. ".conf.gen_init")

---初始化框架代码，并自动解析proto之间的依赖，加载所有的proto文件
function gen:initAll()
	gen.common_command:initAll()
	gen.netutils:initAll()
    gen.netutils.EnableQueue = true -- Do not modify this unless you know exactly what you're doing.
end

--- 声明gen中的package为全局变量，需注意名字污染风险，建议先行开启protectGlobal
---@param prefix string 全局变量前缀
function gen:declarePackageAsGlobal(prefix)
	packageGlobalPrefix = prefix or ""
	declareGlobal(packageGlobalPrefix.."common_command",gen.common_command)
	declareGlobal(packageGlobalPrefix.."netutils",gen.netutils)
	declareGlobal(packageGlobalPrefix.."conf",gen.conf)
end

--- 注销gen中的package为全局变量
function gen:unDeclarePackageAsGlobal()
	unDeclareGlobal(packageGlobalPrefix.."common_command")
	unDeclareGlobal(packageGlobalPrefix.."netutils")
    unDeclareGlobal(packageGlobalPrefix.."conf")
end

---缓存的rawdata数据,必要时请手动清除，如在数据热更前
---@type table<string,table> 
gen.rawdataCached = {}
